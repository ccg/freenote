// Generated by CoffeeScript 1.4.0
(function() {

  describe("The NoteListPanel", function() {
    var createComponentTestArea, view, viewController;
    view = null;
    viewController = null;
    createComponentTestArea = function() {
      var node;
      if (Ext.get("componentTestArea") != null) {
        node = Ext.get("componentTestArea").dom;
        Ext.removeNode(node);
      }
      return Ext.DomHelper.append(Ext.getBody(), "<div id='componentTestArea' style='visibility: hidden'></div>");
    };
    beforeEach(function() {
      createComponentTestArea();
      view = Ext.create("App.view.NoteListPanel", {
        renderTo: "componentTestArea"
      });
      return viewController = view.getController();
    });
    afterEach(function() {
      view.destroy();
      view = null;
      return viewController = null;
    });
    describe("After a successful startup, the NoteListPanel view", function() {
      it("is defined", function() {
        return expect(view).toBeDefined();
      });
      it("has been rendered", function() {
        return expect(view.rendered).toBeTruthy();
      });
      return it("is an instance of App.view.NoteListPanel", function() {
        return expect(view instanceof App.view.NoteListPanel).toBeTruthy();
      });
    });
    describe("After a successful startup, the NoteListPanel ViewController", function() {
      it("is defined", function() {
        return expect(viewController).toBeDefined();
      });
      it("is an instance of App.controller.NoteListPanelViewController", function() {
        return expect(viewController instanceof App.controller.NoteListPanelViewController).toBeTruthy();
      });
      it("has a reference to the correct NoteListPanel view instance", function() {
        return expect(viewController.getView() === view).toBeTruthy();
      });
      it("has a reference to the global message bus", function() {
        expect(viewController.getMessageBus()).toBeDefined();
        return expect(viewController.getMessageBus()).toBeTruthy();
      });
      return describe("messageBus reference", function() {
        return it("has a noteSelected message", function() {
          var noteSelected;
          noteSelected = viewController.getMessageBus().noteSelected;
          expect(noteSelected).toBeDefined();
          return expect(typeof noteSelected).toEqual("function");
        });
      });
    });
    it("has a root node", function() {
      return expect(view.getRootNode()).not.toBeNull();
    });
    it("has a store that is an instance of TreeStore", function() {
      return expect(view.getStore() instanceof Ext.data.TreeStore).toBeTruthy();
    });
    it("has an underlying table with two rows (root node hidden)", function() {
      return expect(view.getView().getNodes().length).toEqual(2);
    });
    return describe("when a note (row) is selected", function() {
      it("calls noteSelected on the global messageBus", function() {
        view.getSelectionModel().select(0);
        return expect(viewController.getMessageBus().noteSelected.calledOnce).toBeTruthy();
      });
      return it("calls noteSelected with the note-model instance", function() {
        var note, selectionModel;
        selectionModel = view.getSelectionModel();
        note = selectionModel.getStore().getAt(0);
        selectionModel.select(0);
        return expect(viewController.getMessageBus().noteSelected.calledWith(note)).toBeTruthy();
      });
    });
  });

}).call(this);
